name: Plus APK Auto-Patcher

on:
  repository_dispatch:
    types:
      - tg-updated
  workflow_dispatch:

jobs:
  auto_patch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: sudo apt-get install -y wget zipalign aapt

      - name: Download Plus APK
        run: |
          tg_apk_url="https://dw.uptodown.net/dwn/RvVkii134Riphftvun7hQBZyU0aCwJjJMFI3FD3XyiTUW8xb9VAvQqV5stPf1WPSv9sWWdEo8U3bAiXJV1RCO6arsCSDoYFiLxyUiGu0U0ri7-qkF_a7-J4DajFwkdqk/IUMY1c4ToBYr1ceAUjl6bJEwq43YckC-Q9ctsA8nhDDTNt7djvBUQ3Ydnnrik-fmKsxAiZPtxTVuPEeqsIo1cPbixRBShzeffHquyZVyciBDW61LbTItkGecBRfY3CIK/X2HrKEyQCeLKcyX4UGzyvtYyffAq6FTUkx8iUIhScO8J1QbrCy6RMG2HPFAXRWpIGFQkwR0WRbgZXP0-DVPSRl9S6vK7mwYOSHQk-NEPNB0=/plus-messenger-11-13-0-0.apk"
          wget -q --show-progress $tg_apk_url -O Plus.apk

      - name: Get latest Plus version
        id: get_version
        run: |
          aapt dump badging Plus.apk | grep -oP "versionName='[^']*" | cut -d "'" -f2 > tg_version.txt
          echo "Latest version: $(cat tg_version.txt)"
        
      - name: Check if new version is available
        id: version_check
        run: |
          if [ -f backup_tg_version.txt ]; then
            old_version=$(cat backup_tg_version.txt)
          else
            old_version=""
          fi

          new_version=$(cat tg_version.txt)

          if [ "$new_version" != "$old_version" ]; then
            echo "new_version_available=true" >> $GITHUB_ENV
          else
            echo "new_version_available=false" >> $GITHUB_ENV
          fi

      - name: Set Plus Version
        if: env.new_version_available == 'true'
        id: set_version
        run: echo "version=$(cat tg_version.txt)" >> $GITHUB_ENV

      - name: Download apktool
        if: env.new_version_available == 'true'
        run: |
          if [ ! -f apktool.jar ]; then
            echo "apktool.jar not found, downloading..."
            wget -q --show-progress https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.10.0.jar -O apktool.jar
          fi

      - name: Decompile APK
        if: env.new_version_available == 'true'
        run: |
          java -jar apktool.jar d Plus.apk -f
          rm -rf Plus/lib/x86*

      - name: Apply Anti+Normal Patches
        if: env.new_version_available == 'true'
        run: |
          java -jar apktool.jar d Plus.apk -f
          rm -rf Plus/lib/x86*
          echo "Applying Anti+Normal Patches..."
          python3 tgpatcher.py --anti --dir Plus/
          echo "Patches applied, building apk..."
          java -jar apktool.jar b Plus/ -o Plus_Anti_Patched.apk
          echo "NOTE: apk may not be signed, you may need to sign it manually."

      - name: ZipAlign APks
        if: env.new_version_available == 'true'
        run: |
          zipalign -p -f 4 Plus_Anti_Patched.apk Plus_Anti_Patched_aligned.apk
          rm Plus_Anti_Patched.apk

      - name: Sign APks
        if: env.new_version_available == 'true'
        run: |
          java -jar keystore/apksigner.jar sign --in Plus_Anti_Patched_aligned.apk --out Plus_Patched_${{ env.version }}.apk --ks keystore/debug.keystore --ks-key-alias androiddebugkey --ks-pass pass:android --key-pass pass:android --v1-signing-enabled true --v2-signing-enabled true --v3-signing-enabled true --v4-signing-enabled false
          rm Plus_Anti_Patched_aligned.apk

      - name: Install upload requirements
        if: env.new_version_available == 'true'
        run: pip install pyrofork tgcrypto

      - name: Send Anti APK to Plus
        if: env.new_version_available == 'true'
        run: |
          export BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          export API_ID=${{ secrets.API_ID }}
          export API_HASH=${{ secrets.API_HASH }}
          python3 tgupload.py Plus_Patched_${{ env.version }}.apk --chat-id ${{ secrets.CHAT_ID }} --caption "$(cat <<EOF
          **Telegram [ Premium ] [ Local+ ] [ Direct ] [ Normal + Anti ]**
          **Version :** ${{ env.version }}
          **Architecture :** Arm + Arm64
          
          **Requirements:** Android 6.0 and up
          **Overview:**
          Telegram is a messaging app with a focus on speed and security.
          
          **❏Changelogs:**
          ● See [Full Changelogs](https://telegra.ph/Telegram-premium-07-22-10)
          - [New] Anti-Del Mode: Button toggle to enable Anti-Del Mode
          - Can be found in Settings -> Telegram Business -> Anti-Del Mode
          
          - **Released by [ Tech Shreyansh ]**
          
          👉 **How to Save/Forward from copyrighted channels:** [Watch Here](https://youtu.be/-X-Ixy73reI)
          
          **NOTE:**
            - If you're **facing issue during login** like internal error, not getting OTP then **download Original telegram** from play store -> Login in it -> come back and login to mod
            - Adding stories functionality gets unlocked with premium mod, but
            - If you still didn't get the story feature, [read more about it here](http://tginfo.me/stories-by-countries)
          
          EOF
          )"

      - name: Update version files and commit changes
        if: env.new_version_available == 'true'
        run: |
          cp tg_version.txt backup_tg_version.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add backup_tg_version.txt
          git commit -m "Update version files to $(cat tg_version.txt)"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
